#!/usr/bin/env python
# Repeat a certain line using looped index
# "[:START:]" will be replaced by $begin
# "[:END:]" wil be replaced by $end
# "[:I:]" will be replaced by integers from $begin to $end
#
# Author: Yuhang(Steven) Wang
# Date: 12-06-2016
# License: MIT/X11

import re
import sys
import yaml
import json


def work(content, start, end):
    pattern_start = re.compile(r'.*\[\:START\:\].*')
    pattern_end = re.compile(r'.*\[\:END\:\].*')
    pattern_i = re.compile(r'.*\[\:I\:\].*')
    lines = []
    for line in content.split("\n"):
        if re.match(pattern_start, line):
            line = line.replace("[:START:]", str(start))
        if re.match(pattern_end, line):
            line = line.replace("[:END:]", str(end))
        if re.match(pattern_i, line):
            line = "\n".join(
                [line.replace("[:I:]", str(i))
                 for i in range(start, end+1)])
        lines.append(line)
    return "\n".join(lines)


def savetxt(f_out, content):
    with open(f_out, 'w') as OUT:
        OUT.write(content)


def main(args):
    template = args[0]
    out_prefix = template.replace("template.", "").replace(".yaml", "")
    begin = int(args[1])
    end = begin
    if len(args) > 2:
        end = int(args[2])
    with open(template, 'r') as IN:
        content = IN.read()
    new_yaml = work(content, begin, end)
    new_json = json.dumps(
        yaml.load(new_yaml),
        sort_keys=True,
        indent=4)
    print(new_yaml)
    f_yaml = "{}.yaml".format(out_prefix)
    f_json = "{}.json".format(out_prefix)
    savetxt(f_yaml, new_yaml)
    savetxt(f_json, new_json)


if __name__ == '__main__':
    main(sys.argv[1:])
